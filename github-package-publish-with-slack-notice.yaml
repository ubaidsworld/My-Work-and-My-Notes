##############################################################
# Description: Add npm packages to Github package repository #
# Author: Ubaidullah Khan                                    #
##############################################################
name: Publish Package

on:
  push:
    branches: [main] # Trigger on push to main
    paths-ignore:
      - 'README.md'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Auto Increment Version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          npm version patch -m "chore(release): bump version to %s"
          git push origin $BRANCH_NAME --follow-tags

      - name: Build package
        run: npm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-artifact
          path: .
  publish:
    runs-on: ubuntu-latest
    needs: build # Ensure build completes before publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          scope: '@hire-link'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: package-artifact
          path: . # Adjust based on artifact location

      - name: Publish to GitHub Packages
        id: publish
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          echo "Published package: $PACKAGE_NAME@$PACKAGE_VERSION"
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

          npm publish | tee publish_output.log

          if grep -q "tagged" publish_output.log; then
            echo "NEW_VERSION_PUBLISHED=true" >> $GITHUB_ENV
          else
            echo "NEW_VERSION_PUBLISHED=false" >> $GITHUB_ENV
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_REPO_TOKEN }}

      - name: Notify Slack on New Package Version
        #if: env.NEW_VERSION_PUBLISHED == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "ðŸš€ *New Package Published!*\nðŸ“¦ Package: `${{ env.PACKAGE_NAME }}@${{ env.PACKAGE_VERSION }}`\nðŸ”— Check it out: https://github.com/${{ github.repository }}/packages"
          SLACK_COLOR: '#36a64f'
